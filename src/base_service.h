/*** 
 * @Author: Chuanbin Wang - wcb@sloong.com
 * @Date: 2015-11-12 15:56:50
 * @LastEditTime: 2021-01-12 20:35:22
 * @LastEditors: Chuanbin Wang
 * @FilePath: /engine/src/base_service.h
 * @Copyright 2015-2020 Sloong.com. All Rights Reserved
 * @Description: 
 */
/*** 
 * @......................................&&.........................
 * @....................................&&&..........................
 * @.................................&&&&............................
 * @...............................&&&&..............................
 * @.............................&&&&&&..............................
 * @...........................&&&&&&....&&&..&&&&&&&&&&&&&&&........
 * @..................&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&..............
 * @................&...&&&&&&&&&&&&&&&&&&&&&&&&&&&&.................
 * @.......................&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&.........
 * @...................&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&...............
 * @..................&&&   &&&&&&&&&&&&&&&&&&&&&&&&&&&&&............
 * @...............&&&&&@  &&&&&&&&&&..&&&&&&&&&&&&&&&&&&&...........
 * @..............&&&&&&&&&&&&&&&.&&....&&&&&&&&&&&&&..&&&&&.........
 * @..........&&&&&&&&&&&&&&&&&&...&.....&&&&&&&&&&&&&...&&&&........
 * @........&&&&&&&&&&&&&&&&&&&.........&&&&&&&&&&&&&&&....&&&.......
 * @.......&&&&&&&&.....................&&&&&&&&&&&&&&&&.....&&......
 * @........&&&&&.....................&&&&&&&&&&&&&&&&&&.............
 * @..........&...................&&&&&&&&&&&&&&&&&&&&&&&............
 * @................&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&............
 * @..................&&&&&&&&&&&&&&&&&&&&&&&&&&&&..&&&&&............
 * @..............&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&....&&&&&............
 * @...........&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&......&&&&............
 * @.........&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&.........&&&&............
 * @.......&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&...........&&&&............
 * @......&&&&&&&&&&&&&&&&&&&...&&&&&&...............&&&.............
 * @.....&&&&&&&&&&&&&&&&............................&&..............
 * @....&&&&&&&&&&&&&&&.................&&...........................
 * @...&&&&&&&&&&&&&&&.....................&&&&......................
 * @...&&&&&&&&&&.&&&........................&&&&&...................
 * @..&&&&&&&&&&&..&&..........................&&&&&&&...............
 * @..&&&&&&&&&&&&...&............&&&.....&&&&...&&&&&&&.............
 * @..&&&&&&&&&&&&&.................&&&.....&&&&&&&&&&&&&&...........
 * @..&&&&&&&&&&&&&&&&..............&&&&&&&&&&&&&&&&&&&&&&&&.........
 * @..&&.&&&&&&&&&&&&&&&&&.........&&&&&&&&&&&&&&&&&&&&&&&&&&&.......
 * @...&&..&&&&&&&&&&&&.........&&&&&&&&&&&&&&&&...&&&&&&&&&&&&......
 * @....&..&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&...........&&&&&&&&.....
 * @.......&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&..............&&&&&&&....
 * @.......&&&&&.&&&&&&&&&&&&&&&&&&..&&&&&&&&...&..........&&&&&&....
 * @........&&&.....&&&&&&&&&&&&&.....&&&&&&&&&&...........&..&&&&...
 * @.......&&&........&&&.&&&&&&&&&.....&&&&&.................&&&&...
 * @.......&&&...............&&&&&&&.......&&&&&&&&............&&&...
 * @........&&...................&&&&&&.........................&&&..
 * @.........&.....................&&&&........................&&....
 * @...............................&&&.......................&&......
 * @................................&&......................&&.......
 * @.................................&&..............................
 * @..................................&..............................
 */

#pragma once

#include "main.h"
#include "IData.h"
#include "IEvent.h"
#include "IControl.h"

#include "ControlHub.h"
#include "NetworkHub.h"
#include "EasyConnect.h"
#include <dlfcn.h>
namespace Sloong
{
	typedef struct RunInfo
	{
		bool ManagerMode = false;
		string Address= "";
		int Port = 0;
		string AssignedTargetTemplateID= "";
		string IncludeTargetType= "";
		string ExcludeTargetType= "";
	} RunInfo;

	class CSloongBaseService
	{
	public:
		CSloongBaseService() {}

		virtual ~CSloongBaseService() {}

		// Just call it without Control module.
		virtual CResult Initialize(RunInfo);

		virtual CResult Run();
		virtual void Stop();

		TResult<shared_ptr<Package>> RegisteToControl(EasyConnect *con, string uuid);

	protected:
		virtual CResult InitlializeForWorker(RuntimeDataPackage *, RunInfo*, EasyConnect *);
		virtual CResult InitlializeForManager(RuntimeDataPackage *);

		CResult RegisteNode();
		CResult InitModule();
		void InitSystem();

	protected:
		void OnProgramRestartEventHandler(SharedEvent);
		void OnProgramStopEventHandler(SharedEvent);
		void OnSendPackageToManagerEventHandler(SharedEvent);
		void OnGetManagerSocketEventHandler(SharedEvent);

	protected:
		static void sloong_terminator();
		static void sloong_unexpected();
		static void on_sigint(int);
		static void on_SIGINT_Event(int);

	protected:
		unique_ptr<CNetworkHub> m_pNetwork = make_unique<CNetworkHub>();
		unique_ptr<CControlHub> m_iC = make_unique<CControlHub>();
		unique_ptr<CLog> m_pLog = make_unique<CLog>();
		RuntimeDataPackage m_oServerConfig;
		uint64_t m_ManagerSession;
		Json::Reader m_oJsonReader;
		Json::Value m_oModuleConfig;
		EasySync m_oExitSync;
		CResult m_oExitResult = CResult::Succeed;
		void *m_pModule = nullptr;
		RUN_STATUS m_emStatus = RUN_STATUS::Created;

		CreateProcessEnvironmentFunction m_pModuleCreateProcessEvnFunc = nullptr;
		RequestPackageProcessFunction m_pModuleRequestHandler = nullptr;
		ResponsePackageProcessFunction m_pModuleResponseHandler = nullptr;
		EventPackageProcessFunction m_pModuleEventHandler = nullptr;
		NewConnectAcceptProcessFunction m_pModuleAcceptHandler = nullptr;
		ModuleInitializationFunction m_pModuleInitializationFunc = nullptr;
		ModuleInitializedFunction m_pModuleInitializedFunc = nullptr;
		PrepareInitializeFunction m_pPrepareInitializeFunc = nullptr;

		static constexpr int REPORT_LOAD_STATUS_INTERVAL = 1000 * 60; // one mintue
	public:
		static unique_ptr<CSloongBaseService> Instance;
	};
} // namespace Sloong